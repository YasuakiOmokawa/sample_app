<script type="text/javascript">

var arr = [];

var setArr = function(hash) {
    var arr_gap = [], arr_cv = [], dts;
    for (var i in hash) {
      dts = i.toString();
      dts = String(Number(dts.substr(4, 2)))
        + "/" + String(Number(dts.substr(6, 2)));
      arr_gap.push( [ dts, gon.hash_for_graph[i][0] ]);
      arr_cv.push( [ dts, gon.hash_for_graph[i][1] ]);
    };
    arr.push(arr_gap, arr_cv);
}

var tickFormatter = function (format, val) {
    switch(format) {
        case 'percent': return val.toFixed(1) + '%';
        case 'number': return val.toFixed(1);
        case 'time': {

            /*
            時間の書式は、 hh:mm:ss
            */
            val_org = val;
            val = Math.abs(parseInt(val));
            var h=""+(val/36000|0)+(val/3600%10|0);
            var m=""+(val%3600/600|0)+(val%3600/60%10|0);
            var s=""+(val%60/10|0)+(val%60%10);
            var s = h +':' + m + ':' + s;
            console.log('converted time is ' + s);
            if(val_org - 0 < 0) {
                s = "-" + s;
            }
            return s;
        }
        default: return val;
    }
}

// 実験コード：　マイナスデータを表示させたい場合
// gon.hash_for_graph[20121205][0] = -10;
// gon.hash_for_graph[20121205][1] = -10;


setArr(gon.hash_for_graph);

// グラフのオプション
var options = {
    seriesColors: ["#e6b422", "#1e50a2"],
    seriesDefaults: {
      shadow: false,
    },
    axesDefaults: {
        tickRenderer: $.jqplot.CanvasAxisTickRenderer ,
        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
        tickOptions: {
          fontSize: '9.5pt',
          fontFamily: 'ヒラギノ角ゴ Pro W3'
        },
    },
    series:[
          // １つ目の項目（棒グラフにする）の設定
        {
            renderer: jQuery . jqplot . BarRenderer,
            fillToZero: true,
            negativeSeriesColors: ["#e6b422"],
            rendererOptions: {
              // barWidth: 20,
            },
        },
          // ２つ目の項目（折れ線グラフにする）の設定
        {
            xaxis: 'x2axis',
            yaxis: 'y2axis',
        }
    ],
    axes: {
        xaxis: {
            renderer: jQuery . jqplot . CategoryAxisRenderer,
            rendererOptions: {
                borderWidth: 1,
            },
            tickOptions: {
              showGridline: false
            }
        },
        x2axis: {
            renderer: jQuery . jqplot . CategoryAxisRenderer,
            tickOptions: {
              showGridline: false
            }
        },
        yaxis: {
            autoscale: true,
            numberTicks: 5,
            // pad: 0,
            tickOptions: {

              // GAP値は自作関数でフォーマットする
              formatter: tickFormatter,
            },
        },
        y2axis: {
            autoscale: true,
            numberTicks: 5,
            // pad: 1,
            tickOptions: {
            },
        },
    },
    // マウスオーバー時の数値表示
    highlighter: {
        // show: true,
        // formatString: '%R',
    },
    // 背景色に関する設定
    grid: {
      background: "transparent",
      gridLineColor: "gray",
      shadow: false,
      drawGridlines: true,
      drawBorder: false,
    },
    // canvasOverlay: {
    //   show: true,
    //   objects: [
    //     {dashedHorizontalLine: { lineWitdh: 1, y: 20 } },
    //     {dashedHorizontalLine: { y: 40 } },
    //     {dashedHorizontalLine: { y: 60 } }
    //   ]
    // }
};

// グラフのフォーマット設定は自作関数で行う
options.axes.yaxis.tickOptions.formatString = gon.format_string;

jQuery( function() {

  // jqplot描画後に実行する操作（jqplot描画前に書くこと）
  $.jqplot.postDrawHooks.push(function() {
      $('.jqplot-axis.jqplot-x2axis').hide();
      $('.jqplot-xaxis-tick').css({"background-color": "paleturquoise"});

      // 32日以上データがあるならマンスリー表示にする
      if ( $('.jqplot-xaxis-tick').length >= 32 ) {
        var text2 = 0;
        var text = 0;
        for ( var i=0; i < $('.jqplot-xaxis-tick').length; i++) {
          text = $( $('.jqplot-xaxis-tick')[i] ).text().split('/');

          // 前日と月が違う場合は表示を変更
          if ( (text2 != text[0]) ) {
            $( $('.jqplot-xaxis-tick')[i] ).text(text[0] + "月");
          } else {
            $( $('.jqplot-xaxis-tick')[i] ).text('');
          }
          text2 = text[0];
        }
      }

      // グラフの下部マージンを変更
      $('#square.jqplot-target').css("margin-bottom", "20px");
  });

  // jqplot描画
  jQuery . jqplot( 'square', arr, options);
} );

</script>
