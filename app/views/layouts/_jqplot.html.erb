<script type="text/javascript">
var arr = [];
var setArr = function(hash) {
    var arr_gap = [], arr_cv = [], dts;
    for (var i in hash) {
      dts = i.toString();
      dts = String(Number(dts.substr(4, 2))) + "/" + String(Number(dts.substr(6, 2)))
      arr_gap.push( [ dts, gon.hash_for_graph[i][0] ]);
      arr_cv.push( [ dts, gon.hash_for_graph[i][1] ]);
    };
    arr.push(arr_gap, arr_cv);
}

var tickFormatter = function (format, val) {
    switch(format) {
        case 'percent': return val.toFixed(1) + '%';
        case 'number': return val.toFixed(1);
        case 'time': {
            var s = ("0" + String(Math.ceil(val / 60))).slice(-2) + ':' + ("0" + String(val % 60)).slice(-2);
            if(val - 0 < 0) {
                s = "-" + s;
            }
            return s;
        }
        default: return val;
    }
}

// 実験コード：　マイナスデータを表示させたい場合
// gon.hash_for_graph[20121205][0] = -10;
// gon.hash_for_graph[20121205][1] = -10;


setArr(gon.hash_for_graph);

// グラフのオプション
var options = {
    seriesColors: ["#e6b422", "#1e50a2"],
    seriesDefaults: {
      shadow: false,
    },
    axesDefaults: {
        tickRenderer: jQuery . jqplot . CanvasAxisTickRenderer ,
        tickOptions: {
          fontSize: '10pt',
          fontFamily: 'ヒラギノ角ゴ Pro W3'
        },
    },
    series:[
          // １つ目の項目（棒グラフにする）の設定
        {
            renderer: jQuery . jqplot . BarRenderer,
            fillToZero: true,
            negativeSeriesColors: ["#e6b422"],
            rendererOptions: {
              // barWidth: 20,
            },
        },
          // ２つ目の項目（折れ線グラフにする）の設定
        {
            xaxis: 'x2axis',
            yaxis: 'y2axis',
            // fillToZero: true,
        }
    ],
    axesDefaults: {
      tickOptions: {
        fontSize: '10pt',
        fontFamily: 'ヒラギノ角ゴ Pro W3',
      },
    },
    axes: {
        xaxis: {
            renderer: jQuery . jqplot . CategoryAxisRenderer,
            rendererOptions: {
                borderWidth: 1,
            },
        },
        x2axis: {
            renderer: jQuery . jqplot . CategoryAxisRenderer,
        },
        yaxis: {
            autoscale: true,
            // ticks: ,
            // renderer: jQuery . jqplot . DateAxisRenderer,
            numberTicks: 5,
            tickOptions: {
              // textColor: "#e6b422",
              // GAP値は自作関数でフォーマットする
              formatter: tickFormatter,
              // formatString: "time",
            },
        },
        y2axis: {
            autoscale: true,
            numberTicks: 5,
            tickOptions: {
              // textColor: "#1e50a2",
            },
        },
    },
    // マウスオーバー時の数値表示
    // highlighter: {
    //     show: true,
    //     // formatString: '%R',
    // },
    // 背景色に関する設定
    grid: {
      background: "white",
      gridLineColor: "black",
      shadow: false,
      drawGridlines: true,
      drawBorder: false,
    }
};

// グラフのオプションを変更
options.axes.yaxis.tickOptions.formatString = gon.format_string;

jQuery( function() {

  $.jqplot.postDrawHooks.push(function() {
      $('.jqplot-axis.jqplot-x2axis').hide();
  });

  jQuery . jqplot( 'square', arr, options);
} );

</script>
